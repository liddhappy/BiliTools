name: gh-release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-docker:
    if: github.repository == 'catlair/BiliTools'
    runs-on: ubuntu-latest
    environment: Build
    outputs:
      DOCKER_TAG2: ${{ steps.tag2.outputs.DOCKER_TAG2 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: set Docker version tag
        run: |
          echo DOCKER_TAG1=${{ github.ref  }} | sed -e "s/refs\/tags\/v//g" >> $GITHUB_ENV
      - name: set Docker latest tag
        run: |
          echo DOCKER_TAG2=${{ contains(env.DOCKER_TAG1, 'rc') && 'test' || 'latest' }} >> $GITHUB_ENV
          sed -i 2a\echo\ version=${{ env.DOCKER_TAG1 }} docker-entrypoint.sh
          echo ${{ env.DOCKER_TAG1 }} >> src/version.txt
      - name: Set output
        id: tag2
        run: |
          echo "::set-output name=DOCKER_TAG2::${{ env.DOCKER_TAG2 }}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: ${{ secrets.DOCKER_PLATFORMS || 'linux/amd64,linux/arm64/v8' }}
          tags: catlair/bilitools:${{ env.DOCKER_TAG2 }},catlair/bilitools:${{ env.DOCKER_TAG1 }}
      - name: sed latest to test
        if: env.DOCKER_TAG2 == 'test'
        run: sed -i s/bilitools:latest/bilitools:test/ docker/deploy.Dockerfile
      - name: Build and Push Deploy
        id: docker_build_deploy
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/deploy.Dockerfile
          push: true
          platforms: ${{ secrets.DOCKER_PLATFORMS || 'linux/amd64,linux/arm64/v8' }}
          tags: catlair/bilitools-deploy:${{ env.DOCKER_TAG2 }},catlair/bilitools-deploy:${{ env.DOCKER_TAG1 }}
      - name: Image digest
        run: |
          echo "镜像对应hash"
          echo ${{ steps.docker_build.outputs.digest }}
          echo ${{ steps.docker_build_deploy.outputs.digest }}
  release:
    needs: build-docker
    if: github.repository == 'catlair/BiliTools'
    runs-on: ubuntu-latest
    environment: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Environment
        run: |
          echo DOCKER_TAG=${{ needs.build-docker.outputs.DOCKER_TAG2 }} >> $GITHUB_ENV
      - name: Copy dist
        run: |
          docker pull catlair/bilitools:${{ env.DOCKER_TAG }}
          docker run -id --entrypoint sh --name copy_dist catlair/bilitools:${{ env.DOCKER_TAG }}
          docker cp copy_dist:/usr/src/app/node_modules .
          docker cp copy_dist:/usr/src/app/dist .
          mv node_modules dist
      - name: ZIP
        run: |
          cd dist
          zip -r -q tencent_scf.zip *
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/fermium'
      - name: Install dependencies
        run: |
          rm yarn.lock
          yarn
          npm install -g typescript rollup
      - name: Build
        run: |
          yarn build:rollup
          cp dist/rollup gh-release -r
          cp package.json gh-release
      - name: Commit files to gh-release branch
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'release: Commit from GitHub Actions (gh-release)'
          branch: gh-release
          commit_options: '--no-verify --signoff'
          file_pattern: gh-release/**
          push_options: '--force'
          skip_fetch: true
          skip_checkout: true
          create_branch: true
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/tencent_scf.zip
            gh-release/index.js
            gh-release/cat_bili_ql.js
            gh-release/index.scf.js
            gh-release/index.scf.min.js
            package.json
          draft: false
          prerelease: ${{ env.DOCKER_TAG == 'test' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
